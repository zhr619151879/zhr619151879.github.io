<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>鬼斯通のblog物语</title>
    <link>https://zhr619151879.github.io/</link>
    <description>Recent content on 鬼斯通のblog物语</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>zhuhaoran@gmail.com (ZHU_HAO_RAN)</managingEditor>
    <webMaster>zhuhaoran@gmail.com (ZHU_HAO_RAN)</webMaster>
    <copyright>&amp;copy;{year},ZHU All Rights Reserved</copyright>
    <lastBuildDate>Sun, 07 Mar 2021 10:38:34 +0000</lastBuildDate>
    <sy:updatePeriod>monthly</sy:updatePeriod>
    
        <atom:link href="https://zhr619151879.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      

      
      <item>
        <title>Golang Channel那些事~</title>
        <link>https://zhr619151879.github.io/posts/knowledge/go-channel/</link>
        <pubDate>Sun, 07 Mar 2021 10:38:34 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Sun, 07 Mar 2021 10:38:34 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/knowledge/go-channel/</guid>
        <description>Go 语言中的一大利器那就是能够非常方便的使用 go 关键字来进行各种并发，而并发后又必然会涉及通信。 Channel 自然而然就成为了 Go 语言开发者中必须要明白明了的</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/wave.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>Golang Interface那些事~</title>
        <link>https://zhr619151879.github.io/posts/knowledge/go-interface/</link>
        <pubDate>Fri, 26 Feb 2021 22:09:29 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Fri, 26 Feb 2021 22:09:29 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/knowledge/go-interface/</guid>
        <description>这篇文章我们来揭秘一下Go语言的接口设计~ 在 Go 语言的语义上，只要某个类型实现了所定义的一组方法集，则就认为其就是同一种类型，是一个东西。大家</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/infinity.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>[剑指offer]04-二维数组中查找</title>
        <link>https://zhr619151879.github.io/posts/leetcode/offer-04/</link>
        <pubDate>Wed, 17 Feb 2021 10:41:13 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Wed, 17 Feb 2021 10:41:13 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/leetcode/offer-04/</guid>
        <description>题目: 二维数组中查找 在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个高效的函数，</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/graph.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Medium</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>[剑指offer]03-数组中重复数字</title>
        <link>https://zhr619151879.github.io/posts/leetcode/%E5%89%91%E6%8C%87offer-03/</link>
        <pubDate>Tue, 09 Feb 2021 11:20:09 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Tue, 09 Feb 2021 11:20:09 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/leetcode/%E5%89%91%E6%8C%87offer-03/</guid>
        <description>题目: 找出数组中重复的数字 在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的， 但不知道有几个数字重复了，也不知</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/graph.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>Easy</category>
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>[Docker详解]-3:揭秘Dockerfile</title>
        <link>https://zhr619151879.github.io/posts/series/docker/%E6%8F%AD%E7%A7%98docker-3/</link>
        <pubDate>Wed, 27 Jan 2021 17:13:12 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Wed, 27 Jan 2021 17:13:12 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/series/docker/%E6%8F%AD%E7%A7%98docker-3/</guid>
        <description>Dockerfile 指令详解 Dockerfie 官方文档：https://docs.docker.com/engine/reference/builder/ Dockerfile 最佳实践文档：ht</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/graph.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Frame</category>
            
          
        
        
          
            
              <category>DOCKER</category>
            
          
        
      </item>
      
      <item>
        <title>[Docker详解]-2:Docker的使用</title>
        <link>https://zhr619151879.github.io/posts/series/docker/%E6%8F%AD%E7%A7%98docker-2/</link>
        <pubDate>Sun, 24 Jan 2021 16:24:49 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Sun, 24 Jan 2021 16:24:49 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/series/docker/%E6%8F%AD%E7%A7%98docker-2/</guid>
        <description>使用镜像 获取镜像 从 Docker 镜像仓库获取镜像的命令是 docker pull。其命令格式为： docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签] 具体的选项可以通过</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/flowchart.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Frame</category>
            
          
        
        
          
            
              <category>DOCKER</category>
            
          
        
      </item>
      
      <item>
        <title>[Docker详解]-1:初探Docker</title>
        <link>https://zhr619151879.github.io/posts/series/docker/%E6%8F%AD%E7%A7%98docker-1/</link>
        <pubDate>Fri, 22 Jan 2021 16:04:34 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Fri, 22 Jan 2021 16:04:34 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/series/docker/%E6%8F%AD%E7%A7%98docker-1/</guid>
        <description>什么是Docker Docker: runc 是一个 Linux 命令行工具，用于根据 OCI容器运行时规范 (opens new window)创建和运行容器。 containerd 是一个守护程序，它管理容器生命周期</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/flowchart.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Frame</category>
            
          
        
        
          
            
              <category>DOCKER</category>
            
          
        
      </item>
      
      <item>
        <title>[面试]-校招Java知识</title>
        <link>https://zhr619151879.github.io/posts/series/interview/java/</link>
        <pubDate>Wed, 16 Dec 2020 11:30:54 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Wed, 16 Dec 2020 11:30:54 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/series/interview/java/</guid>
        <description>概述 基础 数据类型(字节 1byte=8bits) byte/1 char/2 short/2 int/4 float/4 long/8 double/8 boolean/~ : true、false，可以使用 1 bit 来存储，但是具体大小没有明确规定。JVM 会在编译时期将 boolean 类型的数</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature2/workflow.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Code</category>
            
          
        
        
          
            
              <category>Interview</category>
            
          
        
      </item>
      
      <item>
        <title>[面试]-校招计算机网络知识</title>
        <link>https://zhr619151879.github.io/posts/series/interview/%E7%BD%91%E7%BB%9C/</link>
        <pubDate>Wed, 16 Dec 2020 11:23:54 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Wed, 16 Dec 2020 11:23:54 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/series/interview/%E7%BD%91%E7%BB%9C/</guid>
        <description>HTTPS Hyper Text Transfer Protocol over Secure Socket Layer HTTP 有以下安全性问题： 使用明文进行通信，内容可能会被窃听； 不验证通信方的身份，通信方的身份有可能遭遇伪装； 无法证明报文的完整</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature2/mathbook.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Code</category>
            
          
        
        
          
            
              <category>Interview</category>
            
          
        
      </item>
      
      <item>
        <title>[面试]-校招数据库知识</title>
        <link>https://zhr619151879.github.io/posts/series/interview/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
        <pubDate>Wed, 16 Dec 2020 11:21:54 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Wed, 16 Dec 2020 11:21:54 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/series/interview/%E6%95%B0%E6%8D%AE%E5%BA%93/</guid>
        <description>Mysql SQL执行过程 ![image-20200831221827719](/Users/zhuhaoran/Library/Application Support/typora-user-images/image-20200831221827719.png) 事务 事务指的是满足 ACID 特性的一组操作，可以通过 Commit 提交一个事务，也可以使用 Rollback 进行回滚。 ACID ![image-20200818162605438](/Users/zhuhaoran/Library/Application Support/typora-user-images/image-20200818162605438.png) 并发一致性问题 丢失修改 ![image-20200818162810687](/Users/zhuhaoran/Library/Application Support/typora-user-images/image-20200818162810687.png) 读脏数</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature2/bam.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Code</category>
            
          
        
        
          
            
              <category>Interview</category>
            
          
        
      </item>
      
      <item>
        <title>[面试]-校招操作系统知识</title>
        <link>https://zhr619151879.github.io/posts/series/interview/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</link>
        <pubDate>Wed, 16 Dec 2020 11:20:54 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Wed, 16 Dec 2020 11:20:54 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/series/interview/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</guid>
        <description>Linux ![image-20200902214702059](/Users/zhuhaoran/Library/Application Support/typora-user-images/image-20200902214702059.png) 用户态, 内核态 https://zhuanlan.zhihu.com/p/69554144 内核，它是一种特殊的软件程序,控制计算机的硬件资源，例如协调CPU资源，分配内存资源，并且提供稳定的环境供应用程序运行</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/flowchart.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Code</category>
            
          
        
        
          
            
              <category>Interview</category>
            
          
        
      </item>
      
      <item>
        <title>[GRPC详解]-2</title>
        <link>https://zhr619151879.github.io/posts/series/grpc/grpc-2/</link>
        <pubDate>Wed, 16 Dec 2020 11:12:54 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Wed, 16 Dec 2020 11:12:54 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/series/grpc/grpc-2/</guid>
        <description></description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/flowchart.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Golang</category>
            
          
            
              <category>Frame</category>
            
          
        
        
          
            
              <category>GRPC</category>
            
          
        
      </item>
      
      <item>
        <title>[MQ详解]-1</title>
        <link>https://zhr619151879.github.io/posts/series/mq/mq/</link>
        <pubDate>Wed, 16 Dec 2020 11:12:54 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Wed, 16 Dec 2020 11:12:54 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/series/mq/mq/</guid>
        <description></description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/flowchart.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Frame</category>
            
          
        
        
          
            
              <category>MQ</category>
            
          
        
      </item>
      
      <item>
        <title>[GRPC详解]-1</title>
        <link>https://zhr619151879.github.io/posts/series/grpc/grpc/</link>
        <pubDate>Wed, 16 Dec 2020 11:09:21 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Wed, 16 Dec 2020 11:09:21 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/series/grpc/grpc/</guid>
        <description>afdsaf</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/flowchart.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Golang</category>
            
          
            
              <category>Frame</category>
            
          
        
        
          
            
              <category>GRPC</category>
            
          
        
      </item>
      
      <item>
        <title>Golang First Post</title>
        <link>https://zhr619151879.github.io/posts/golangfirstcat/</link>
        <pubDate>Wed, 16 Dec 2020 10:58:50 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Wed, 16 Dec 2020 10:58:50 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/golangfirstcat/</guid>
        <description></description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/graph.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>Golang</category>
            
          
        
        
          
            
          
        
      </item>
      
      <item>
        <title>My First Post</title>
        <link>https://zhr619151879.github.io/posts/leetcode/myfirstpost/</link>
        <pubDate>Tue, 15 Dec 2020 11:34:48 +0000</pubDate>
        <author>zhuhaoran@gmail.com (ZHU_HAO_RAN)</author>
        <atom:modified>Tue, 15 Dec 2020 11:34:48 +0000</atom:modified>
        <guid>https://zhr619151879.github.io/posts/leetcode/myfirstpost/</guid>
        <description>HelloWorld!</description>
        
        <dc:creator>ZHU_HAO_RAN</dc:creator>
        <media:content url="https://zhr619151879.github.io/images/feature1/graph.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
          
        
        
          
            
              <category>LeetCode</category>
            
          
        
        
          
            
          
        
      </item>
      

    
  </channel>
</rss>